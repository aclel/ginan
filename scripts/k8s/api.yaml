apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
  namespace: argo
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ginan-data
  namespace: argo
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 2Gi
  hostPath:
    path: /var/ginan/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ginan-data-claim-1
  namespace: argo
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ginan-api
  namespace: argo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ginan-api
  template:
    metadata:
      labels:
        app: ginan-api
    spec:
      volumes:
      - name: ginan-data-claim-1
        persistentVolumeClaim:
          claimName: ginan-data-claim-1
      containers:
      - name: ginan-api
        image: ginan-api:latest
        imagePullPolicy: Never
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 5000
        volumeMounts:
          - mountPath: "/var/ginan"
            name: ginan-data-claim-1
# ---
# TODO: This doesn't expose the api successfully
# apiVersion: v1
# kind: Service
# metadata:
#   name: ginan-api
#   namespace: argo
# spec:
#   selector:
#     app: ginan-api
#   ports:
#   - port: 5000
#     targetPort: 5000
#   type: LoadBalancer